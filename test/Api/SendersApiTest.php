<?php
/**
 * SendersApiTest
 * PHP version 5
 *
 * @category Class
 * @package  EgoiClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * APIv3 (Beta)
 *
 * # Introduction Just a quick pick!!! This is our new version of API. Remember, it is not stable yet!!! But we invite you play with it and give us your feedback ;) # Getting Started  E-goi can be integrated with many environments and programming languages via our REST API. We've created a developer focused portal to give your organization a clear and quick overview of how to integrate with E-goi. The developer portal focuses on scenarios for integration and flow of events. We recommend familiarizing yourself with all of the content in the developer portal, before start using our rest API.   The E-goi  APIv3 is served over HTTPS. To ensure data privacy, unencrypted HTTP is not supported.  Request data is passed to the API by POSTing JSON objects to the API endpoints with the appropriate parameters.   BaseURL = api.egoiapp.com  # HTTP Methods for RESTful Services This API supports 5 HTTP methods:  * <b>GET</b>: The HTTP GET method is used to **read** (or retrieve) a representation of a resource. * <b>POST</b>: The POST verb is most-often utilized to **create** new resources. * <b>PATCH</b>: PATCH is used for **modify** capabilities. The PATCH request only needs to contain the changes to the resource, not the complete resource * <b>PUT</b>: PUT is most-often utilized for **update** capabilities, PUT-ing to a known resource URI with the request body containing the newly-updated representation of the original resource. * <b>DELETE</b>: DELETE is pretty easy to understand. It is used to **delete** a resource identified by a URI.  # Authentication   We use a custom authentication method, you will need a apikey that you can find in your account settings. Below you will see a curl example to get your account information:  #!/bin/bash  curl -X GET 'https://api.egoiapp.com/my-account' \\  -H 'accept: application/json' \\  -H 'Apikey: <YOUR_APY_KEY>'  Here you can see a curl Post example with authentication:  #!/bin/bash  curl -X POST 'http://api.egoiapp.com/tags' \\  -H 'accept: application/json' \\  -H 'Apikey: <YOUR_APY_KEY>' \\  -H 'Content-Type: application/json' \\  -d '{`name`:`Your custom tag`,`color`:`#FFFFFF`}'  <security-definitions/>
 *
 * The version of the OpenAPI document: 3.0.0-beta
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.2.3-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace EgoiClient;

use \EgoiClient\Configuration;
use \EgoiClient\ApiException;
use \EgoiClient\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * SendersApiTest Class Doc Comment
 *
 * @category Class
 * @package  EgoiClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class SendersApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for createCellphoneSender
     *
     * Create cellphone sender.
     *
     */
    public function testCreateCellphoneSender()
    {
    }

    /**
     * Test case for createEmailSender
     *
     * Create email sender.
     *
     */
    public function testCreateEmailSender()
    {
    }

    /**
     * Test case for createPhoneSender
     *
     * Create phone sender.
     *
     */
    public function testCreatePhoneSender()
    {
    }

    /**
     * Test case for deleteCellphoneSender
     *
     * Remove cellphone sender.
     *
     */
    public function testDeleteCellphoneSender()
    {
    }

    /**
     * Test case for deleteEmailSender
     *
     * Remove email sender.
     *
     */
    public function testDeleteEmailSender()
    {
    }

    /**
     * Test case for deletePhoneSender
     *
     * Remove phone sender.
     *
     */
    public function testDeletePhoneSender()
    {
    }

    /**
     * Test case for getAllCellphoneSenders
     *
     * Get all cellphone senders.
     *
     */
    public function testGetAllCellphoneSenders()
    {
    }

    /**
     * Test case for getAllEmailSenders
     *
     * Get all email senders.
     *
     */
    public function testGetAllEmailSenders()
    {
    }

    /**
     * Test case for getAllPhoneSenders
     *
     * Get all phone senders.
     *
     */
    public function testGetAllPhoneSenders()
    {
    }

    /**
     * Test case for putEmailSender
     *
     * Update email sender.
     *
     */
    public function testPutEmailSender()
    {
    }
}
